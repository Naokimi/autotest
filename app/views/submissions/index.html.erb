<div class="d-flex justify-content-between">
  <%= link_to exam_path(@exam), class: "btn btn-primary mt-5" do%>
    <i class="fas fa-arrow-left px-3"></i>
  <% end %>
  <%= link_to  submissions_pdf_path(@exam), class: "btn mt-4 btn-download" do %>
    <i class="fas fa-cloud-download-alt px-4"></i>
  <% end %>
</div>
<div class="container shadow back-color">.
  <div class="d-flex justify-content-between">
    <h4>Exam id: <%= @exam.id %></h4>
    <h4>Total submissions: <%= @submissions.count %></h4>
    <%= link_to 'View all incorrect answers', exam_answers_path, class:'btn btn-primary mb-3' %>
  </div>
  <table class="table">
    <thead>
      <tr>
        <th>Question id</th>
        <th>Correct Answer</th>
        <th># of total answers</th>
        <th># of correct answers</th>
        <th># of incorrect answers</th>
      </tr>
    </thead>
    <% @exam.questions.each do |question| %>
      <tr>
        <td>
          <%= link_to question_path(question) do %>
            <%= question.id %>
          <% end %>
        </td>
        <td><%= question.correct_answer %></td>
        <td><%= question.answers.count %></td>
        <td><%= question.answers.where(is_correct: true).count %></td>
        <td><%= question.answers.where(is_correct: false).count %></td>
      </tr>
    <% end %>
  </table>
  <% @submissions.each do |submission| %>
      <%= link_to submission_path(submission),class: "table-links" do %>
        <p > Submission id: <%= submission.id %>, Number of answers: <%= submission.answers.count %></p>
        <% if submission.answers.empty? %>
          <%= link_to 'Analyze the answers', submission_answers_path(submission), class: "analyze-answer-link", remote: true, method: :post %>
        <% end %>
      <% end %>
  <% end %>
</div>


<script>
  document.addEventListener("DOMContentLoaded", () => {
    let requestCount = 0;
    const maxRequests = 3;
    const requests = [];

    document.querySelectorAll(".analyze-answer-link").forEach((a) => {
      const request = new Promise((resolve, reject) => {
        a.addEventListener("ajax:success", () => {
          console.log("something done...");
          requestCount -= 1;
        });

        const timer = setInterval(() => {
          if (requestCount < maxRequests) {
            console.log("starting req");
            requestCount += 1;
            a.click();
            clearInterval(timer);
          }
        }, 1000);
      });

      requests.push(request);
    });

    Promise.all(requests).then(() => {
      console.log("all done");
    })
  });
</script>
